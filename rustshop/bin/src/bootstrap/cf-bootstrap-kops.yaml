# CloudFormation Bootstrap (non-root parts)
AWSTemplateFormatVersion: "2010-09-09"

Resources:

# Kops

  # Kops State S3 Bucket
  KopsState:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-state"
      # This bucket should not be public, ever
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName:
          Ref: KopsStateLogs
      VersioningConfiguration:
        Status: "Enabled"
      LifecycleConfiguration:
        Rules:
          - Id: "ExpirationRule"
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 90

  # Kops State S3 Bucket Policy
  KopsStatePolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: KopsState
      PolicyDocument:
        Statement:
          # Only MFA-ed users can delete
          - Action: "s3:Delete*"
            Effect: "Deny"
            Principal: "*"
            Resource:
              Fn::Sub: "arn:aws:s3:::${KopsState}/*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false

  # Kops Log S3 Bucket
  KopsStateLogs:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-state-logs"
      # This bucket should not be public, ever
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: "LogDeliveryWrite"
      LifecycleConfiguration:
        Rules:
          - Id: "ExpirationRule"
            Status: "Enabled"
            ExpirationInDays: 90

  # Kops Log S3 Bucket Policy
  KopsStateLogsPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: KopsStateLogs
      PolicyDocument:
        Statement:
          # Only MFA-ed users can delete
          - Action: "s3:Delete*"
            Effect: "Deny"
            Principal: "*"
            Resource:
              Fn::Sub: "arn:aws:s3:::${KopsStateLogs}/*"
            Condition:
              BoolIfExists:
                aws:MultiFactorAuthPresent: false

  # Kops State S3 Bucket
  KopsOidcPublic:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName:
        Fn::Sub: "${AWS::StackName}-oidc-public"
      LifecycleConfiguration:
        Rules:
          - Id: "ExpirationRule"
            Status: "Enabled"
            NoncurrentVersionExpirationInDays: 90

  # KopsOidc State S3 Bucket Policy
  KopsOidcPublicPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket:
        Ref: KopsOidcPublic
      PolicyDocument:
        Statement:
          # Allow public to read from the bucket
          # https://web.archive.org/web/20220708024642/https://kops.sigs.k8s.io/getting_started/aws/
          - Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Resource:
              Fn::Sub: "arn:aws:s3:::${KopsOidcPublic}/*"
