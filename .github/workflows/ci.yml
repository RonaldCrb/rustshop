# This is a basic workflow to help you get started with Actions

name: "CI"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    name: "Lint"
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      # Cache the CI devShell build
      - name: Cache install Nix packages
        uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}-lint
          flake_paths: ".#devShells.x86_64-linux.lint"

      # run the same check that git `pre-commit` hook would, just in case
      - name: Commit check
        run: nix develop --ignore-environment --extra-experimental-features nix-command --extra-experimental-features flakes .#lint --command ./misc/git-hooks/pre-commit

  test:
    name: "Test"
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Cache install Nix packages
        uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}-test
          flake_paths: ".#deps"

      - name: Run test
        run: nix build -L --extra-experimental-features nix-command --extra-experimental-features flakes .#test

  build-services:
    name: "Build Services"
    runs-on: ubuntu-latest
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Cache install Nix packages
        uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}-build-services
          flake_paths: ".#deps"
          
      - name: Sanity check if it can run it
        run: nix run --extra-experimental-features nix-command --extra-experimental-features flakes .#app.shopkeeper -- --help


  build-containers:
    name: "Build Containers"
    runs-on: ubuntu-latest
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Cache install Nix packages
        uses: mtoohey31/cache-flake-attrs@v2
        with:
          key: ${{ runner.os }}-nix-${{ hashFiles('./flake.lock', './flake.nix') }}-build-containers
          flake_paths: ".#cont.shopkeeper .#cont.starter"
